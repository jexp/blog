statement="MATCH (n) RETURN '_'+str(id(n)) as id, head(labels(n)) as label, n limit 4"
curl http://localhost:7474/db/data/transaction/commit -H accept:application/json -H content-type:application/json -d "{\"statements\":[{\"statement\":\"$statement\"}]}" | tee ~/trash/nodes.json

jq -c '.results[].data[].row| {an: {(.[0]) : (.[2] + {id:.[0], label:.[1]})}}' -f ~/trash/nodes.json | tr '\n' '\r' | curl "http://localhost:8080/workspace0?operation=updateGraph" -d -

jq -a -c '.results[].data[].row| {an: {(.[0]) : (.[2] + {id:.[0], label:.[1]})}}'  < ~/trash/nodes.json

http://stedolan.github.io/jq/manual/

curl "http://localhost:8080/workspace0?operation=updateGraph" -d "{\"an\":{\"A\":{\"label\":\"Streaming Node A\"}}}"

jq -a -c '.results[].data[].row| {an: {(.[0]) : (.[2] + {id:.[0], label:.[1]})}}'  < ~/trash/nodes.json | sed -e 's/$/\r/'  | curl -i -XPOST "http://localhost:8080/workspace0?operation=updateGraph" -d - 


{"an":{"_0":{"id":"_0","label":"Movie","tagline":"Welcome to the Real World","released":1999,"title":"The Matrix"}}}
{"an":{"_1":{"id":"_1","label":"Person","born":1964,"name":"Keanu Reeves"}}}
{"an":{"_2":{"id":"_2","label":"Person","born":1967,"name":"Carrie-Anne Moss"}}}
{"an":{"_3":{"id":"_3","label":"Person","born":1961,"name":"Laurence Fishburne"}}}
{\"an\":{\"A\":{\"label\":\"Streaming Node A\"}}}"

statement="MATCH (n) RETURN '_'+str(id(n)) as id, head(labels(n)) as label, n limit 4"
curl http://localhost:7474/db/data/transaction/commit -H accept:application/json -H content-type:application/json -d "{\"statements\":[{\"statement\":\"$statement\"}]}" | \
jq -a -c '.results[].data[].row| {an: {(.[0]) : (.[2] + {id:.[0], label:.[1]})}}'


curl "http://localhost:8080/workspace0?operation=updateGraph" -d '{"an":{"_0":{"id":"_0","label":"Movie","tagline":"Welcome to the Real World","released":1999,"title":"The Matrix"}}}'


curl "http://localhost:8080/workspace0?operation=updateGraph" -d $'{"an":{"A":{"label":"Streaming Node A"}}}\r
{"an":{"B":{"label":"Streaming Node B"}}}\r
{"an":{"C":{"label":"Streaming Node C"}}}\r
{"ae":{"AB":{"source":"A","target":"B","directed":false}}}\r
{"ae":{"BC":{"source":"B","target":"C","directed":false}}}\r
{"ae":{"CA":{"source":"C","target":"A","directed":false}}}'

statement="MATCH (a)-[r]->(b) RETURN id(a) as a_id, head(labels(a)) as a_label, a, id(b) as b_id, head(labels(b)) as label, b, id(r) as r_id, type(r) as r_type, r limit 100"
statement="MATCH (a)-[r]->(b) RETURN id(a) as a_id, head(labels(a)) as a_label, a, id(b) as b_id, head(labels(b)) as label, b, id(r) as r_id, type(r) as r_type, r"

curl -s http://localhost:7474/db/data/transaction/commit -H accept:application/json -H content-type:application/json -d "{\"statements\":[{\"statement\":\"$statement\"}]}" | \
jq -a -c '.results[].data[].row | 
 {an: {((.[0] | tostring)) : (.[2] + {id:.[0], label:.[1]})}},
 {an: {((.[3] | tostring)) : (.[5] + {id:.[3], label:.[4]})}}, 
 {ae: {((.[6] | tostring)) : (.[8] + {source: .[0] | tostring , target: .[3] | tostring, id:.[6], label:.[7]})}}'  | sed -e $'s/}}}/}}}\r/' | \
curl -s -i --data-binary @- -XPOST "http://localhost:8080/workspace0?operation=updateGraph" |\
wc -l

cat football.json | \
jq -a -c '.results[].data[].row | 
 {an: {((.[0] | tostring)) : (.[2] + {id:.[0], label:.[1]})}},
 {an: {((.[3] | tostring)) : (.[5] + {id:.[3], label:.[4]})}}, 
 {ae: {((.[6] | tostring)) : (.[8] + {source: .[0] | tostring , target: .[3] | tostring, id:.[6], label:.[7]})}}'  | sed -e $'s/}}}/}}}\r/' | \
curl -s -i --data-binary @- -XPOST "http://localhost:8080/workspace0?operation=updateGraph" |\
wc -l

